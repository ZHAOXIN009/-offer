```
class Solution {
public:
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        return build(preorder, 0, preorder.size()-1, inorder, 0, inorder.size()-1);
    }

    TreeNode* build(vector<int>&preorder, int preleft, int preright, vector<int>&inorder, int inleft, int inright){
        if(preleft>preright)return nullptr;
        int curr=preorder[preleft];
        int inmid;
        for(int i=inleft; i<=inright; ++i){
            if(inorder[i]==curr){
                inmid=i;
                break;
            }
        }
        TreeNode*root=new TreeNode(curr);
        root->left=build(preorder, preleft+1, preleft+inmid-inleft, inorder, inleft, inmid-1);
        root->right=build(preorder, preleft+inmid-inleft+1, preright, inorder, inmid+1, inright);
        return root;
    }
};
```
